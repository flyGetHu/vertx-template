<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.vertx.template</groupId>
  <artifactId>template</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <!-- ========== 项目基础配置 ========== -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>21</jdk.version>
    <main.verticle>com.vertx.template.verticle.MainVerticle</main.verticle>
    <launcher.class>io.vertx.core.Launcher</launcher.class>

    <!-- ========== Maven插件版本 ========== -->
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
    <spotless.version>2.44.0</spotless.version>
    <googleJavaFormat.version>1.24.0</googleJavaFormat.version>

    <!-- ========== 核心框架版本 ========== -->
    <vertx.version>5.0.0</vertx.version>
    <guice.version>7.0.0</guice.version>
    <javax.inject.version>1</javax.inject.version>

    <!-- ========== 日志框架版本 ========== -->
    <slf4j.version>2.0.13</slf4j.version>
    <logback.version>1.4.14</logback.version>

    <!-- ========== 工具库版本 ========== -->
    <lombok.version>1.18.36</lombok.version>
    <jackson.version>2.15.2</jackson.version>
    <reflections.version>0.10.2</reflections.version>

    <!-- ========== 校验框架版本 ========== -->
    <validation.version>3.0.2</validation.version>
    <hibernate.validator.version>8.0.1.Final</hibernate.validator.version>
    <el.api.version>4.0.2</el.api.version>

    <!-- ========== 测试框架版本 ========== -->
    <junit-jupiter.version>5.9.1</junit-jupiter.version>
    <mockito.version>5.5.0</mockito.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- ========== 核心框架依赖 ========== -->
    <!-- Vert.x核心组件 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-client</artifactId>
    </dependency>

    <!-- 配置管理 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config-yaml</artifactId>
    </dependency>

    <!-- 集群支持 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-hazelcast</artifactId>
    </dependency>

    <!-- ========== 日志框架 ========== -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <!-- ========== 开发工具 ========== -->
    <!-- Lombok代码生成工具 -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- ========== JSON处理 ========== -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!-- Jackson JSR310时间类型支持 -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- ========== 依赖注入框架 ========== -->
    <!-- Google Guice依赖注入容器 -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
    </dependency>
    <!-- JSR-330标准注解 -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${javax.inject.version}</version>
    </dependency>
    <!-- 注解扫描支持 -->
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>${reflections.version}</version>
    </dependency>

    <!-- ========== 参数校验框架 ========== -->
    <!-- Jakarta Bean Validation API -->
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>${validation.version}</version>
    </dependency>
    <!-- Hibernate Validator实现 -->
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate.validator.version}</version>
    </dependency>
    <!-- EL表达式支持 -->
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.el</artifactId>
      <version>${el.api.version}</version>
    </dependency>

    <!-- ========== 数据库相关 ========== -->
    <!-- Vert.x MySQL客户端 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-mysql-client</artifactId>
    </dependency>

    <!-- jwt认证 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-auth-jwt</artifactId>
    </dependency>

    <!-- ========== 测试框架依赖 ========== -->
    <!-- Vert.x测试支持 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5测试框架 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Mockito模拟框架 -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>21</release>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>${launcher.class}</Main-Class>
                    <Main-Verticle>${main.verticle}</Main-Verticle>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <configuration>
          <mainClass>${launcher.class}</mainClass>
          <arguments>
            <argument>run</argument>
            <argument>${main.verticle}</argument>
          </arguments>
        </configuration>
      </plugin>
      <!-- 集成常见质量检查插件 -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <!-- 通用配置 -->
          <encoding>UTF-8</encoding>
          <ratchetFrom>origin/main</ratchetFrom>

          <!-- Java文件格式化配置 -->
          <java>
            <!-- 指定要格式化的Java文件 -->
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>
            <!-- 使用Google Java Format进行代码格式化 -->
            <googleJavaFormat>
              <version>${googleJavaFormat.version}</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <!-- 导入语句排序 -->
            <importOrder/>
            <!-- 移除未使用的导入 -->
            <removeUnusedImports/>
            <!-- 格式化注解 -->
            <formatAnnotations/>
          </java>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
