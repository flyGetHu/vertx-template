---
description:
globs:
alwaysApply: false
---
---
description: "Vert.x项目Java编码规范 - 定义变量声明、方法设计、异常处理、路由控制器等编码标准"
auto_attachments:
  - "**/*.java"
  - "pom.xml"
---

# Vert.x 项目编码规范

本规范定义了项目的Java代码风格、结构和最佳实践。

## 变量声明规则

### 变量不可变性
- 所有变量默认声明为 `final`，例如：`final String id = "123";`
- 只有在确实需要修改变量值时才省略 `final`
- 示例见 [CodeStyleExample.java](mdc:src/main/java/com/vertx/template/examples/CodeStyleExample.java)

### 集合类型
- 优先使用不可变集合：`List.of()`, `Set.of()`, `Map.of()`
- 需要可修改的集合时使用线程安全实现：`ConcurrentHashMap`, `CopyOnWriteArrayList`

### 命名约定
- 局部变量：驼峰式，如 `userId`, `productName`
- 常量：全大写+下划线，如 `MAX_RETRY_COUNT`
- 成员变量：不使用前缀，直接驼峰式

## 方法设计规范

### 方法设计原则
- 方法应当短小精悍，最大行数控制在30行以内
- 单一职责原则：一个方法只做一件事
- 参数数量控制在3个以内，超过时使用DTO对象

### 异步方法规范
- 返回 `Future<T>` 而非使用回调
- 使用 `Promise` 创建 `Future`
- 参考 [AnnotationRouterHandler.java](mdc:src/main/java/com/vertx/template/router/handler/AnnotationRouterHandler.java) 中的异步处理模式

## 异常处理

### 异常基类
- 业务异常统一继承 [BusinessException](mdc:src/main/java/com/vertx/template/exception/BusinessException.java)
- 校验异常使用 [ValidationException](mdc:src/main/java/com/vertx/template/exception/ValidationException.java)

### 异常处理原则
- 不要捕获后不处理异常（避免空catch块）
- 异常处理集中在 [ResponseHandler](mdc:src/main/java/com/vertx/template/handler/ResponseHandler.java)
- 错误信息统一格式化并返回，客户端得到一致的错误响应

## 路由与控制器规范

### 路由定义
- 使用注解定义路由，如 `@RestController`, `@GetMapping`
- 路由分组参考 [RouterRegistry](mdc:src/main/java/com/vertx/template/router/RouterRegistry.java)
- 参数注解：`@PathParam`, `@QueryParam`, `@RequestBody` 等

### 控制器设计
- 控制器使用 `@RestController` 和 `@Singleton` 注解
- 依赖注入使用 `@Inject`
- 参考 [ProductController](mdc:src/main/java/com/vertx/template/controller/ProductController.java)

## 响应式编程规范

### Vert.x Best Practices
- 避免阻塞操作，必要时使用 `vertx.executeBlocking()`
- 利用 `Future` 的组合功能：`compose()`, `map()`, `flatMap()`
- 避免嵌套 Future 回调，优先使用链式调用

### 事件循环保护
- 长时间操作必须放在专门的工作线程执行
- 不要在事件循环中使用阻塞I/O或CPU密集型计算

## 数据校验

### Bean Validation
- 实体类使用Jakarta Bean Validation注解
- 示例参考 [Product](mdc:src/main/java/com/vertx/template/model/Product.java)
- 校验执行由 [ValidationUtils](mdc:src/main/java/com/vertx/template/router/validation/ValidationUtils.java) 统一处理

## 日志规范

### 日志级别使用
- ERROR: 影响系统运行的错误
- WARN: 不影响系统但需要关注的异常情况
- INFO: 重要业务事件和状态变化
- DEBUG: 调试信息，生产环境通常不开启

### 日志内容
- 包含关键标识信息如用户ID、请求ID
- 敏感信息（如密码、令牌）必须脱敏后记录
